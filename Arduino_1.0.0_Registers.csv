Address,Description,Datatype,OriginalTag,Tag,Category,Group,Name,GroupId,NameId,SymbolId,Symbol,Units,Min,Max,User,SWdefault,NOTE
0x00,Digital Pin IO Configurations,,,,,,,,,,,,,,,,"0 = input, 1 = output; Here Swdefaults are shown in binary format but is takes decimal numbers. Reason why they are repesented in binary here is it is easy to see what bits are set as input or output by default"
0x00,DDRD Register,int16,CONF.IO.PD,CONF.IO.PD,CONF,IO,PD,100,0,101,PD,,0,255,RW,0B00000000,
0x01,DDRB Register,int16,CONF.IO.PB,CONF.IO.PB,CONF,IO,PB,100,1,102,PB,,0,255,RW,0B00100000,
0x02,DDRC Register,int16,CONF.IO.PC,CONF.IO.PC,CONF,IO,PC,100,2,103,PC,,0,255,RW,0B00000000,
0x03,Digital Pin High/Low,,,,,,,,,,,,,,,,"0 = LOW, 1 = HIGH; If pin is set to input and want to use internal Pull-Up Resistor set input pin to high. SW default has internal Pull-Up resistors enabled"
0x03,D2,int16,DIGI.IO.PD2,DIGI.IO.PD2,DIGI,IO,PD2,100,10,110,PD2,,0,1,RW,1,
0x04,~D3,int16,DIGI.IO.PD3,DIGI.IO.PD3,DIGI,IO,PD3,100,11,111,PD3,,0,1,RW,1,
0x05,D4,int16,DIGI.IO.PD4,DIGI.IO.PD4,DIGI,IO,PD4,100,12,112,PD4,,0,1,RW,1,
0x06,~D5,int16,DIGI.IO.PD5,DIGI.IO.PD5,DIGI,IO,PD5,100,13,113,PD5,,0,1,RW,1,
0x07,~D6,int16,DIGI.IO.PD6,DIGI.IO.PD6,DIGI,IO,PD6,100,14,114,PD6,,0,1,RW,1,
0x08,D7,int16,DIGI.IO.PD7,DIGI.IO.PD7,DIGI,IO,PD7,100,15,115,PD7,,0,1,RW,1,
0x09,D8,int16,DIGI.IO.PB0,DIGI.IO.PB0,DIGI,IO,PB0,100,16,116,PB0,,0,1,RW,1,
0x0A,~D9,int16,DIGI.IO.PB1,DIGI.IO.PB1,DIGI,IO,PB1,100,17,117,PB1,,0,1,RW,1,
0x0B,~D10,int16,DIGI.IO.PB2,DIGI.IO.PB2,DIGI,IO,PB2,100,18,118,PB2,,0,1,RW,1,
0x0C,~D11,int16,DIGI.IO.PB3,DIGI.IO.PB3,DIGI,IO,PB3,100,19,119,PB3,,0,1,RW,1,
0x0D,D12,int16,DIGI.IO.PB4,DIGI.IO.PB4,DIGI,IO,PB4,100,20,120,PB4,,0,1,RW,1,
0x0E,D13,int16,DIGI.IO.PB5,DIGI.IO.PB5,DIGI,IO,PB5,100,21,121,PB5,,0,1,RW,0,
0x0F,A0/D14,int16,DIGI.IO.PC0,DIGI.IO.PC0,DIGI,IO,PC0,100,22,122,PC0,,0,1,RW,1,
0x10,A1/D15,int16,DIGI.IO.PC1,DIGI.IO.PC1,DIGI,IO,PC1,100,23,123,PC1,,0,1,RW,1,
0x11,A2/D16,int16,DIGI.IO.PC2,DIGI.IO.PC2,DIGI,IO,PC2,100,24,124,PC2,,0,1,RW,1,
0x12,A3/D17,int16,DIGI.IO.PC3,DIGI.IO.PC3,DIGI,IO,PC3,100,25,125,PC3,,0,1,RW,1,
0x13,A4/D18,int16,DIGI.IO.PC4,DIGI.IO.PC4,DIGI,IO,PC4,100,26,126,PC4,,0,1,RW,1,
0x14,A5/D19,int16,DIGI.IO.PC5,DIGI.IO.PC5,DIGI,IO,PC5,100,27,127,PC5,,0,1,RW,1,
0x15,Analog inputs,,,,,,,,,,,,,,,,"Analog Input max 1023 = 5V, min =  0V"
0x15,A6,int16,ANALOG.INPUT.ADC6,ANALOG.INPUT.ADC6,ANALOG,INPUT,ADC6,101,30,130,ADC6,,0,1023,R,0,
0x16,A7,int16,ANALOG.INPUT.ADC7,ANALOG.INPUT.ADC7,ANALOG,INPUT,ADC7,101,31,131,ADC7,,0,1023,R,0,
0x17,Helper Registers (for any use),,,,,,,,,,,,,,,,Helper registers if Arduino needs to hold values some reason. So these do nothing else than hold temporary values
0x17,H0 Register,int16,HELP.HOLD.H0,HELP.HOLD.H0,HELP,HOLD,H0,102,40,140,H0,,-32768,32767,RW,0,
0x18,H1 Register,int16,HELP.HOLD.H1,HELP.HOLD.H1,HELP,HOLD,H1,102,41,141,H1,,-32768,32767,RW,0,
0x19,H2 Register,int16,HELP.HOLD.H2,HELP.HOLD.H2,HELP,HOLD,H2,102,42,142,H2,,-32768,32767,RW,0,
0x1A,H3 Register,int16,HELP.HOLD.H3,HELP.HOLD.H3,HELP,HOLD,H3,102,43,143,H3,,-32768,32767,RW,0,
0x1B,H4 Register,int16,HELP.HOLD.H4,HELP.HOLD.H4,HELP,HOLD,H4,102,44,144,H4,,-32768,32767,RW,0,
0x1C,Reset,int16,CONF.IO.RESET,CONF.IO.RESET,CONF,IO,RESET,100,45,145,RESET,,0,1,RW,0,Resets Arduino if set to 1
